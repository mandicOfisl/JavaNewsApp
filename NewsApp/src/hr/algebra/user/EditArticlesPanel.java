/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.user;

import hr.algebra.dal.Repo;
import hr.algebra.dal.RepoFactory;
import hr.algebra.model.Article;
import hr.algebra.model.ArticleTableModel;
import hr.algebra.model.Category;
import hr.algebra.model.Creator;
import hr.algebra.utils.FileUtils;
import hr.algebra.utils.IconUtils;
import hr.algebra.utils.MessageUtils;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.text.JTextComponent;

/**
 *
 * @author C
 */
public class EditArticlesPanel extends javax.swing.JPanel {

    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;
    
    private static final Random RANDOM = new Random();
    private static final String DIR = "assets";
    private final String NO_IMAGE_PATH = "assets" + File.separator + "no_image.png";
    private final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    
    private Repo repo;
    private ArticleTableModel articleTableModel;
    /**
     * Creates new form EditArticlesPanel
     */
    public EditArticlesPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDescription = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taContent = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        cbCreator = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfPublishedDate = new javax.swing.JTextField();
        lbDescriptionError = new javax.swing.JLabel();
        lbContentError = new javax.swing.JLabel();
        lbPublishedDateError = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblImg = new javax.swing.JLabel();
        tfPicturePath = new javax.swing.JTextField();
        btnChooseImage = new javax.swing.JButton();
        lbPicturePathError = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClearAll = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        lbTitleError = new javax.swing.JLabel();
        lbLinkError = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfLink = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArticles = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(1003, 770));
        setPreferredSize(new java.awt.Dimension(1004, 850));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel3.setText("Description");

        taDescription.setColumns(20);
        taDescription.setLineWrap(true);
        taDescription.setRows(2);
        jScrollPane2.setViewportView(taDescription);

        jLabel4.setText("Content");

        taContent.setColumns(20);
        taContent.setLineWrap(true);
        taContent.setRows(5);
        jScrollPane3.setViewportView(taContent);

        jLabel5.setText("Creator");

        jLabel6.setText("Category");

        jLabel7.setText("Published date");

        lbDescriptionError.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lbDescriptionError.setForeground(new java.awt.Color(255, 0, 51));
        lbDescriptionError.setText("X");

        lbContentError.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lbContentError.setForeground(new java.awt.Color(255, 0, 51));
        lbContentError.setText("X");

        lbPublishedDateError.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lbPublishedDateError.setForeground(new java.awt.Color(255, 0, 51));
        lbPublishedDateError.setText("X");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(258, 258, 258)
                                .addComponent(jLabel6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfPublishedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbPublishedDateError)))
                        .addGap(259, 259, 259)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbContentError)
                            .addComponent(lbDescriptionError)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDescriptionError)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbContentError)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCreator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPublishedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPublishedDateError, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblImg.setMinimumSize(new java.awt.Dimension(340, 200));
        lblImg.setPreferredSize(new java.awt.Dimension(340, 200));

        btnChooseImage.setText("Choose image");
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });

        lbPicturePathError.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lbPicturePathError.setForeground(new java.awt.Color(255, 0, 51));
        lbPicturePathError.setText("X");

        btnAdd.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusAlertYellow"));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusRed"));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClearAll.setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusLightBackground"));
        btnClearAll.setText("Clear all");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnClearAll)
                .addGap(38, 38, 38)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClearAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbPicturePathError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPicturePath, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChooseImage)
                        .addGap(61, 61, 61))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChooseImage)
                    .addComponent(tfPicturePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPicturePathError))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Title");

        tfTitle.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        lbTitleError.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lbTitleError.setForeground(new java.awt.Color(255, 0, 51));
        lbTitleError.setText("X");

        lbLinkError.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lbLinkError.setForeground(new java.awt.Color(255, 0, 51));
        lbLinkError.setText("X");

        jLabel2.setText("Link");

        tfLink.setMaximumSize(new java.awt.Dimension(12, 28));
        tfLink.setName(""); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(319, 319, 319)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTitleError)
                        .addContainerGap(139, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbLinkError)
                        .addGap(12, 12, 12))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTitleError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbLinkError))
                .addContainerGap())
        );

        tblArticles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArticlesMouseClicked(evt);
            }
        });
        tblArticles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblArticlesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblArticles);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(7, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        try {
            uploadNewPicture();
        } catch (IOException ex) {
            MessageUtils.showErrorMessage("Error", "Error uploading image.");
            lbPicturePathError.setVisible(true);
        }
    }//GEN-LAST:event_btnChooseImageActionPerformed

    private void uploadNewPicture() throws IOException {
        File file = FileUtils.uploadFile("Images", "jpg", "jpeg", "png");
        if (file != null) {
            String ext = file.getAbsolutePath().substring(file.getAbsolutePath().lastIndexOf("."));            
            String pictureName = Math.abs(RANDOM.nextInt()) + ext; // random ime za fajlu            
            String localPicturePath = DIR + File.separator + pictureName;
            
            FileUtils.copy(file.getAbsolutePath(), localPicturePath);
            
            setPicture(localPicturePath);
            tfPicturePath.setText(localPicturePath);
        }
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (validateInputs()) {
            try {
                Article newArticle = buildArticleFromFields();
                repo.createArticle(newArticle);
                MessageUtils.showInformationMessage("Success", "New article created!");
                
                clearAllFields();
                init();
            } catch (Exception ex) {
                MessageUtils.showErrorMessage("Error", "Cannot create article!");
            }
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (validateInputs() && tblArticles.getSelectedRow() > -1) {
            int id = (Integer) tblArticles.getValueAt(tblArticles.getSelectedRow(), 0);
            
            try {
                Article a = buildArticleFromFields();
                repo.updateArticle(id, a);
                MessageUtils.showInformationMessage("Success", "Article updated!");
                
                clearAllFields();
                init();
            } catch (Exception ex) {
                MessageUtils.showErrorMessage("Error", "Cannot execute update!");
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteSelectedArticle();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblArticlesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArticlesMouseClicked
        showArticle();
    }//GEN-LAST:event_tblArticlesMouseClicked

    private void tblArticlesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblArticlesKeyReleased
        showArticle();
    }//GEN-LAST:event_tblArticlesKeyReleased

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        init();
    }//GEN-LAST:event_formComponentShown

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        clearAllFields();
    }//GEN-LAST:event_btnClearAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbCreator;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbContentError;
    private javax.swing.JLabel lbDescriptionError;
    private javax.swing.JLabel lbLinkError;
    private javax.swing.JLabel lbPicturePathError;
    private javax.swing.JLabel lbPublishedDateError;
    private javax.swing.JLabel lbTitleError;
    private javax.swing.JLabel lblImg;
    private javax.swing.JTextArea taContent;
    private javax.swing.JTextArea taDescription;
    private javax.swing.JTable tblArticles;
    private javax.swing.JTextField tfLink;
    private javax.swing.JTextField tfPicturePath;
    private javax.swing.JTextField tfPublishedDate;
    private javax.swing.JTextField tfTitle;
    // End of variables declaration//GEN-END:variables

    
    private void init() {
        try {
            initValidation();
            hideErrorLabels();
            clearAllFields();
            initRepo();
            initComboBoxes();
            initTable();            
        } catch (Exception e) {
            MessageUtils.showErrorMessage("Error", "Cannot initiate form.");
        }
    }
    
    private void initTable() throws Exception{
        tblArticles.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblArticles.setAutoCreateRowSorter(true);
        tblArticles.setRowHeight(25);
        articleTableModel = new ArticleTableModel(repo.selectArticles());
        tblArticles.setModel(articleTableModel);
    }

    private void initRepo() throws Exception {
        repo = RepoFactory.getRepo();
    }

    private void initValidation() {
        validationFields = Arrays.asList(tfTitle, tfLink, taDescription, taContent, tfPicturePath);
        errorLabels = Arrays.asList(lbTitleError, lbLinkError, lbDescriptionError, lbContentError, lbPicturePathError);
    }

    private void showArticle() {
        if (tblArticles.getSelectedRow() > -1) {
            int row = tblArticles.getSelectedRow();
            Article article = new Article(
                    (Integer) tblArticles.getValueAt(row, 0),
                    (String) tblArticles.getValueAt(row, 1),
                    (String) tblArticles.getValueAt(row, 2),
                    (String) tblArticles.getValueAt(row, 3),
                    (String) tblArticles.getValueAt(row, 4),
                    (String) tblArticles.getValueAt(row, 5),
                    (String) tblArticles.getValueAt(row, 6),
                    LocalDateTime.parse((String) tblArticles.getValueAt(row, 7)),
                    (String) tblArticles.getValueAt(row, 8)                    
            );
            fillContent(article);  
            SwingUtilities.updateComponentTreeUI(this);
        }
    }

    private void fillContent(Article article) {
        tfTitle.setText(article.getTitle());
        tfLink.setText(article.getLink());
        taDescription.setText(article.getDescription());
        taContent.setText(article.getContent());
        tfPublishedDate.setText(article.getPublishedDate().toString().split("T")[0]);
        
        changeCbSelection(article.getCreator(), article.getCategory());
                
        setPicture(article.getPicturePath());
    }

    private void setPicture(String picturePath) {
        try {
            lblImg.setIcon(IconUtils.createIcon(picturePath, 340, 200));
        } catch (IOException iOException) {
            try {
                lblImg.setIcon(IconUtils.createIcon(NO_IMAGE_PATH, 340, 200));
            } catch (IOException iOException1) {
                lblImg.setText("NO IMAGE");
            }
        }        
        tfPicturePath.setText(picturePath);
    }

    private void initComboBoxes() throws Exception {
        List<Creator> creators = repo.getCreators();
        DefaultComboBoxModel creatorModel = new DefaultComboBoxModel();
        creators.forEach(c -> {
            creatorModel.addElement(c.getName());
        });
        
        List<Category> categories = repo.getCategories();
        DefaultComboBoxModel categoryModel = new DefaultComboBoxModel();
        categories.forEach(c -> {
            categoryModel.addElement(c.getName());
        });
        
        cbCreator.setModel(creatorModel);
        cbCategory.setModel(categoryModel);
    }

    private void changeCbSelection(String creator, String category) {
        cbCreator.setSelectedItem(creator);
        cbCategory.setSelectedItem(category);
    }

    private void hideErrorLabels() {
        lbContentError.setVisible(false);
        lbDescriptionError.setVisible(false);
        lbContentError.setVisible(false);
        lbLinkError.setVisible(false);
        lbTitleError.setVisible(false);
        lbPublishedDateError.setVisible(false);
        lbPicturePathError.setVisible(false);
    }

    private void clearAllFields() {
        tfTitle.setText("");
        tfLink.setText("");
        taDescription.setText("");
        taContent.setText("");
        tfPublishedDate.setText("");
        tfPicturePath.setText("");
        setPicture("");        
    }

    private void deleteSelectedArticle() {
        if (tblArticles.getSelectedRow() > -1) {
            int row = tblArticles.getSelectedRow();
        
            int id = (Integer) tblArticles.getValueAt(row, 0);
            
            try {
                repo.deleteArticle(id);
                MessageUtils.showInformationMessage("Success", "Article deleted!");
            } catch (Exception ex) {
                MessageUtils.showErrorMessage("Error", "Cannot delete article!");
            }
            
            String picturePath = (String) tblArticles.getValueAt(row, 3);
            
            try {
                FileUtils.deleteFile(picturePath);
            } catch (IOException ex) {
                MessageUtils.showErrorMessage("Error", "Error deleting picture from hard drive.");
            }
            
            init();
        }
    }

    private Boolean validateInputs() {
        validationFields.forEach( f -> {
            if (f.getText().trim().isEmpty()) {
                errorLabels.get(validationFields.indexOf(f)).setVisible(true);                
            } else {
                errorLabels.get(validationFields.indexOf(f)).setVisible(false);
            }
        });
        
        if (!errorLabels.stream().noneMatch((lbl) -> (lbl.isVisible()))) {
            return false;
        }
        
        try {
            Date date = dateFormat.parse(tfPublishedDate.getText());
            lbPublishedDateError.setVisible(false);
        } catch (ParseException ex) {
            lbPublishedDateError.setVisible(true);
            return false;
        }
        
        return true;
    }

    private Article buildArticleFromFields() throws ParseException {        
        Article a = new Article(
                tfTitle.getText(),
                tfLink.getText(),
                tfPicturePath.getText(),
                taDescription.getText(),
                taContent.getText(),
                cbCreator.getSelectedItem().toString(),
                LocalDateTime.ofInstant(dateFormat.parse(tfPublishedDate.getText()).toInstant(), ZoneId.systemDefault()),
                cbCategory.getSelectedItem().toString()
        );
        return a;
    }
}
